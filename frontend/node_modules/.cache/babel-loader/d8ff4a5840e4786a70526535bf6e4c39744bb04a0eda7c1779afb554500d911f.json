{"ast":null,"code":"var _jsxFileName = \"/Users/tobiasmikkelsen/Desktop/My_projects/Course-Path/frontend/src/components/Planner/Planner.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport styles from './Planner.module.css';\nimport Dashboard from './Dashboard/Dashboard';\nimport Schedule from './Schedule/Schedule';\nimport BottomBar from './BottomBar/BottomBar';\nimport plans from './degreeCourses.json'; // Import the JSON data\n\n// Define the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlansContext = /*#__PURE__*/createContext();\nexport default function Planner() {\n  _s();\n  const [selectedPlanID, setSelectedPlanID] = useState(\"1\"); // Default to the first plan\n\n  const coursePlanId = 1; // Example ID, change as needed\n\n  fetch(`http://localhost:8000/api/Course-Plan/${coursePlanId}/`, {\n    method: 'GET',\n    // Using GET method to retrieve data\n    headers: {\n      'Content-Type': 'application/json' // Expect JSON response\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok'); // Handle any non-2xx HTTP response\n    }\n    return response.json(); // Parse the JSON response body\n  }).then(data => {\n    console.log('Course Plan Data:', data); // Log the course plan data to console\n  }).catch(error => {\n    console.error('Fetch Error:', error); // Log errors to the console\n  });\n  const value = {\n    plans,\n    selectedPlanID,\n    setSelectedPlanID\n  };\n  return /*#__PURE__*/_jsxDEV(PlansContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.planner,\n      children: [/*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Schedule, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Planner, \"y4qxJU4F3z3Jqnkhf2s6Y6o4WBA=\");\n_c = Planner;\nvar _c;\n$RefreshReg$(_c, \"Planner\");","map":{"version":3,"names":["React","createContext","useState","styles","Dashboard","Schedule","BottomBar","plans","jsxDEV","_jsxDEV","PlansContext","Planner","_s","selectedPlanID","setSelectedPlanID","coursePlanId","fetch","method","headers","then","response","ok","Error","json","data","console","log","catch","error","value","Provider","children","className","planner","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tobiasmikkelsen/Desktop/My_projects/Course-Path/frontend/src/components/Planner/Planner.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react'\nimport styles from './Planner.module.css'\nimport Dashboard from './Dashboard/Dashboard'\nimport Schedule from './Schedule/Schedule'\nimport BottomBar from './BottomBar/BottomBar'\nimport plans from './degreeCourses.json' // Import the JSON data\n\n// Define the context\nexport const PlansContext = createContext()\n\nexport default function Planner() {\n  const [selectedPlanID, setSelectedPlanID] = useState(\"1\") // Default to the first plan\n\n  const coursePlanId = 1; // Example ID, change as needed\n\n  fetch(`http://localhost:8000/api/Course-Plan/${coursePlanId}/`, {\n      method: 'GET',  // Using GET method to retrieve data\n      headers: {\n          'Content-Type': 'application/json',  // Expect JSON response\n      },\n  })\n  .then(response => {\n      if (!response.ok) {\n          throw new Error('Network response was not ok');  // Handle any non-2xx HTTP response\n      }\n      return response.json();  // Parse the JSON response body\n  })\n  .then(data => {\n      console.log('Course Plan Data:', data);  // Log the course plan data to console\n  })\n  .catch(error => {\n      console.error('Fetch Error:', error);  // Log errors to the console\n  });\n  \n\n  const value = {\n    plans,\n    selectedPlanID,\n    setSelectedPlanID,\n  }\n\n  return (\n    <PlansContext.Provider value={value}>\n      <div className={styles.planner}>\n        <Dashboard />\n        <Schedule />\n        {/* <BottomBar /> */}\n      </div>\n    </PlansContext.Provider>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,KAAK,MAAM,sBAAsB,EAAC;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGT,aAAa,CAAC,CAAC;AAE3C,eAAe,SAASU,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC,EAAC;;EAE1D,MAAMa,YAAY,GAAG,CAAC,CAAC,CAAC;;EAExBC,KAAK,CAAC,yCAAyCD,YAAY,GAAG,EAAE;IAC5DE,MAAM,EAAE,KAAK;IAAG;IAChBC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB,CAAG;IACzC;EACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAE;IACrD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAE;EAC7B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;IACVC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC,CAAC,CAAE;EAC7C,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;IACZH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC,CAAE;EAC3C,CAAC,CAAC;EAGF,MAAMC,KAAK,GAAG;IACZtB,KAAK;IACLM,cAAc;IACdC;EACF,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,eAClCtB,OAAA;MAAKuB,SAAS,EAAE7B,MAAM,CAAC8B,OAAQ;MAAAF,QAAA,gBAC7BtB,OAAA,CAACL,SAAS;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACb5B,OAAA,CAACJ,QAAQ;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE5B;AAACzB,EAAA,CAxCuBD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}