{"ast":null,"code":"import plans from './degreeCourses.json';\nexport const extractPlanNames = () => {\n  return plans.map(plan => plan.planName);\n};\nconst findPlanByID = planID => {\n  return plans.find(plan => plan.planID === planID);\n};\nexport const countTotalGroups = planID => {\n  const plan = findPlanByID(planID);\n  if (plan) {\n    return plan.dashboardCourses.length;\n  }\n  return 0;\n};\nexport const countTotalCourses = planID => {\n  const plan = findPlanByID(planID);\n  if (plan) {\n    return plan.dashboardCourses.reduce((count, category) => count + category.courses.length, 0);\n  }\n  return 0;\n};\nexport const countTotalScheduleCourses = planID => {\n  const plan = findPlanByID(planID);\n  if (plan) {\n    return plan.schedule.reduce((total, term) => total + term.coursesNr.length, 0);\n  }\n  return 0;\n};\nexport const getTotalECTS = planID => {\n  return findPlanByID(planID).totalECTS;\n};\nexport const getDegreeName = planID => {\n  return findPlanByID(planID).degree;\n};\nexport const countTotalECTSSchedule = planID => {\n  const plan = findPlanByID(planID);\n  if (plan) {\n    const allCoursesNr = plan.schedule.flatMap(term => term.coursesNr);\n    const allCourses = plan.dashboardCourses.flatMap(category => category.courses);\n    return allCourses.filter(course => allCoursesNr.includes(course.courseNr)).reduce((total, course) => total + course.ects, 0);\n  }\n  return 0;\n};","map":{"version":3,"names":["plans","extractPlanNames","map","plan","planName","findPlanByID","planID","find","countTotalGroups","dashboardCourses","length","countTotalCourses","reduce","count","category","courses","countTotalScheduleCourses","schedule","total","term","coursesNr","getTotalECTS","totalECTS","getDegreeName","degree","countTotalECTSSchedule","allCoursesNr","flatMap","allCourses","filter","course","includes","courseNr","ects"],"sources":["/Users/cristianplacinta/DTU/Course-Path/frontend/src/components/Planner/utils.js"],"sourcesContent":["import plans from './degreeCourses.json'\n\nexport const extractPlanNames = () => {\n    return plans.map(plan => plan.planName)\n}\n\nconst findPlanByID = (planID) => {\n    return plans.find(plan => plan.planID === planID)\n}\n\nexport const countTotalGroups = (planID) => {\n    const plan = findPlanByID(planID)\n    if (plan) {\n      return plan.dashboardCourses.length\n    }\n    return 0\n}\n  \nexport const countTotalCourses = (planID) => {\n    const plan = findPlanByID(planID)\n    if (plan) {\n      return plan.dashboardCourses.reduce((count, category) => count + category.courses.length, 0)\n    }\n    return 0\n}\n\nexport const countTotalScheduleCourses = (planID) => {\n    const plan = findPlanByID(planID)\n    if (plan) {\n      return plan.schedule.reduce((total, term) => total + term.coursesNr.length, 0)\n    }\n    return 0\n}\n\nexport const getTotalECTS = (planID) => {\n    return findPlanByID(planID).totalECTS\n}\n  \nexport const getDegreeName = (planID) => {\n    return findPlanByID(planID).degree\n}\n\nexport const countTotalECTSSchedule = (planID) => {\n    const plan = findPlanByID(planID)\n    if (plan) {\n      const allCoursesNr = plan.schedule.flatMap(term => term.coursesNr)\n      const allCourses = plan.dashboardCourses.flatMap(category => category.courses)\n      return allCourses\n        .filter(course => allCoursesNr.includes(course.courseNr))\n        .reduce((total, course) => total + course.ects, 0)\n    }\n    return 0\n  }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,sBAAsB;AAExC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAClC,OAAOD,KAAK,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;AAC3C,CAAC;AAED,MAAMC,YAAY,GAAIC,MAAM,IAAK;EAC7B,OAAON,KAAK,CAACO,IAAI,CAACJ,IAAI,IAAIA,IAAI,CAACG,MAAM,KAAKA,MAAM,CAAC;AACrD,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAIF,MAAM,IAAK;EACxC,MAAMH,IAAI,GAAGE,YAAY,CAACC,MAAM,CAAC;EACjC,IAAIH,IAAI,EAAE;IACR,OAAOA,IAAI,CAACM,gBAAgB,CAACC,MAAM;EACrC;EACA,OAAO,CAAC;AACZ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAIL,MAAM,IAAK;EACzC,MAAMH,IAAI,GAAGE,YAAY,CAACC,MAAM,CAAC;EACjC,IAAIH,IAAI,EAAE;IACR,OAAOA,IAAI,CAACM,gBAAgB,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,QAAQ,KAAKD,KAAK,GAAGC,QAAQ,CAACC,OAAO,CAACL,MAAM,EAAE,CAAC,CAAC;EAC9F;EACA,OAAO,CAAC;AACZ,CAAC;AAED,OAAO,MAAMM,yBAAyB,GAAIV,MAAM,IAAK;EACjD,MAAMH,IAAI,GAAGE,YAAY,CAACC,MAAM,CAAC;EACjC,IAAIH,IAAI,EAAE;IACR,OAAOA,IAAI,CAACc,QAAQ,CAACL,MAAM,CAAC,CAACM,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,SAAS,CAACV,MAAM,EAAE,CAAC,CAAC;EAChF;EACA,OAAO,CAAC;AACZ,CAAC;AAED,OAAO,MAAMW,YAAY,GAAIf,MAAM,IAAK;EACpC,OAAOD,YAAY,CAACC,MAAM,CAAC,CAACgB,SAAS;AACzC,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIjB,MAAM,IAAK;EACrC,OAAOD,YAAY,CAACC,MAAM,CAAC,CAACkB,MAAM;AACtC,CAAC;AAED,OAAO,MAAMC,sBAAsB,GAAInB,MAAM,IAAK;EAC9C,MAAMH,IAAI,GAAGE,YAAY,CAACC,MAAM,CAAC;EACjC,IAAIH,IAAI,EAAE;IACR,MAAMuB,YAAY,GAAGvB,IAAI,CAACc,QAAQ,CAACU,OAAO,CAACR,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;IAClE,MAAMQ,UAAU,GAAGzB,IAAI,CAACM,gBAAgB,CAACkB,OAAO,CAACb,QAAQ,IAAIA,QAAQ,CAACC,OAAO,CAAC;IAC9E,OAAOa,UAAU,CACdC,MAAM,CAACC,MAAM,IAAIJ,YAAY,CAACK,QAAQ,CAACD,MAAM,CAACE,QAAQ,CAAC,CAAC,CACxDpB,MAAM,CAAC,CAACM,KAAK,EAAEY,MAAM,KAAKZ,KAAK,GAAGY,MAAM,CAACG,IAAI,EAAE,CAAC,CAAC;EACtD;EACA,OAAO,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}